#parse("include/init_var.vm")
//
// C# class for DTO "${entity.name}" 
// Created on $today.date ( Date ISO $today.date("yyyy-MM-dd") - Time $today.time )
// Generated by $generator.name ( version $generator.version )
//
$env.setLanguage('C#')
using System;
using System.Collections.Generic;
using System.Linq;

using ${NAMESPACE}.Models;
using ${NAMESPACE}.Entities;
#set( $name = ${fn.uncapitalize($entity.name)})
#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.NOT_IN_SELECTED_LINKS ) )
#set( $keyFields = $entity.getAttributesByCriteria( $const.KEY ) )
#set( $linkFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.IN_SELECTED_LINKS ) )

namespace ${NAMESPACE}.DTO
{
	public class ${entity.name}UpdateDTO
	{
		// data Fields
#foreach( $attribute in $dataFields )
#if ($attribute.isStringType() == true )
#if ($attribute.isNotNull() == true)
		public ${attribute.formattedType(0)} ${attribute.formattedName(0)} { get; set; } 
#else
		public ${attribute.formattedType(0)}? ${attribute.formattedName(0)} { get; set; } 
#end ## end if
#else	
		public ${attribute.formattedType(0)} ${attribute.formattedName(0)} { get; set; } 
#end ## end if
#end ## end foreach

		// Links Fields
#foreach ( $attribute in $linkFields )
		public $attribute.type ${attribute.name} { get; set; }
#end ## end foreach

###foreach( $link in $entity.selectedLinks )
###if ( $link.fieldType.matches("List.+") )
##		public ${link.formattedFieldType(0)} ${link.formattedFieldName(0)} { get; set; }
###end ## end if
###set($test = "${link.formattedFieldType(0)}s")
###foreach( $attribute in $entity.nonKeyAttributes)
###if( ${attribute.formattedName(0)} ==  $test)
##		public string Selected${link.formattedFieldType(0)}Id { get; set; }
##		public ICollection<SelectListItem> ${attribute.formattedName(0)} { get; set; }
###end ## end if
###end ## end foreach
###end ## end foreach
		
		public ${entity.name}UpdateDTO()
		{
		}
	}
}
